// <auto-generated />
using System;
using HoFSimpleJSONReader.Logging;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HoFSimpleJSONReader.Logging.Migrations
{
    [DbContext(typeof(LogDbContext))]
    partial class LogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HoFSimpleJSONReader.Logging.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogEvent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("LogEntry");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HoFSimpleJSONReader.Logging.CustomLog", b =>
                {
                    b.HasBaseType("HoFSimpleJSONReader.Logging.LogEntry");

                    b.ToTable("CustomLogs", (string)null);
                });

            modelBuilder.Entity("HoFSimpleJSONReader.Logging.ErrorLog", b =>
                {
                    b.HasBaseType("HoFSimpleJSONReader.Logging.LogEntry");

                    b.ToTable("ErrorLogs", (string)null);
                });

            modelBuilder.Entity("HoFSimpleJSONReader.Logging.CustomLog", b =>
                {
                    b.HasOne("HoFSimpleJSONReader.Logging.LogEntry", null)
                        .WithOne()
                        .HasForeignKey("HoFSimpleJSONReader.Logging.CustomLog", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoFSimpleJSONReader.Logging.ErrorLog", b =>
                {
                    b.HasOne("HoFSimpleJSONReader.Logging.LogEntry", null)
                        .WithOne()
                        .HasForeignKey("HoFSimpleJSONReader.Logging.ErrorLog", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
